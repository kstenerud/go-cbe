// Copyright 2019 Karl Stenerud
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

// Generated by github.com/kstenerud/go-concise-encoding/codegen
  // DO NOT EDIT
  // IF THIS LINE SHOWS UP IN THE GIT DIFF, THIS FILE HAS BEEN EDITED

package builder

import (
	"fmt"
	"math/big"
	"reflect"
	"time"

	"github.com/kstenerud/go-concise-encoding/events"
	"github.com/kstenerud/go-concise-encoding/options"

	"github.com/cockroachdb/apd/v2"
	"github.com/kstenerud/go-compact-float"
	"github.com/kstenerud/go-compact-time"
)

// string

type stringBuilder struct{}

func newStringBuilder() ObjectBuilder       { return &stringBuilder{} }
func (_this *stringBuilder) String() string { return nameOf(_this) }
func (_this *stringBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, reflect.TypeOf(""), name, args...)
}
func (_this *stringBuilder) InitTemplate(_ *Session) {}
func (_this *stringBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *stringBuilder) SetParent(_ ObjectBuilder) {}
func (_this *stringBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *stringBuilder) BuildFromInt(_ int64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromInt")
}
func (_this *stringBuilder) BuildFromUint(_ uint64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUint")
}
func (_this *stringBuilder) BuildFromBigInt(_ *big.Int, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigInt")
}
func (_this *stringBuilder) BuildFromFloat(_ float64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromFloat")
}
func (_this *stringBuilder) BuildFromBigFloat(_ *big.Float, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigFloat")
}
func (_this *stringBuilder) BuildFromDecimalFloat(_ compact_float.DFloat, _ reflect.Value) {
	_this.panicBadEvent("BuildFromDecimalFloat")
}
func (_this *stringBuilder) BuildFromBigDecimalFloat(_ *apd.Decimal, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigDecimalFloat")
}
func (_this *stringBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *stringBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *stringBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *stringBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *stringBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *stringBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *stringBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *stringBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *stringBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *stringBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *stringBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// uint16Array

type uint16ArrayBuilder struct{}

func newUint16ArrayBuilder() ObjectBuilder       { return &uint16ArrayBuilder{} }
func (_this *uint16ArrayBuilder) String() string { return nameOf(_this) }
func (_this *uint16ArrayBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, reflect.TypeOf(uint16(0)), name, args...)
}
func (_this *uint16ArrayBuilder) InitTemplate(_ *Session) {}
func (_this *uint16ArrayBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *uint16ArrayBuilder) SetParent(_ ObjectBuilder) {}
func (_this *uint16ArrayBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *uint16ArrayBuilder) BuildFromInt(_ int64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromInt")
}
func (_this *uint16ArrayBuilder) BuildFromUint(_ uint64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUint")
}
func (_this *uint16ArrayBuilder) BuildFromBigInt(_ *big.Int, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigInt")
}
func (_this *uint16ArrayBuilder) BuildFromFloat(_ float64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromFloat")
}
func (_this *uint16ArrayBuilder) BuildFromBigFloat(_ *big.Float, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigFloat")
}
func (_this *uint16ArrayBuilder) BuildFromDecimalFloat(_ compact_float.DFloat, _ reflect.Value) {
	_this.panicBadEvent("BuildFromDecimalFloat")
}
func (_this *uint16ArrayBuilder) BuildFromBigDecimalFloat(_ *apd.Decimal, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigDecimalFloat")
}
func (_this *uint16ArrayBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *uint16ArrayBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *uint16ArrayBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *uint16ArrayBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *uint16ArrayBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *uint16ArrayBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *uint16ArrayBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *uint16ArrayBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *uint16ArrayBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *uint16ArrayBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *uint16ArrayBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// uint8Array

type uint8ArrayBuilder struct{}

func newUint8ArrayBuilder() ObjectBuilder       { return &uint8ArrayBuilder{} }
func (_this *uint8ArrayBuilder) String() string { return nameOf(_this) }
func (_this *uint8ArrayBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, reflect.TypeOf(uint8(0)), name, args...)
}
func (_this *uint8ArrayBuilder) InitTemplate(_ *Session) {}
func (_this *uint8ArrayBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *uint8ArrayBuilder) SetParent(_ ObjectBuilder) {}
func (_this *uint8ArrayBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *uint8ArrayBuilder) BuildFromInt(_ int64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromInt")
}
func (_this *uint8ArrayBuilder) BuildFromUint(_ uint64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUint")
}
func (_this *uint8ArrayBuilder) BuildFromBigInt(_ *big.Int, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigInt")
}
func (_this *uint8ArrayBuilder) BuildFromFloat(_ float64, _ reflect.Value) {
	_this.panicBadEvent("BuildFromFloat")
}
func (_this *uint8ArrayBuilder) BuildFromBigFloat(_ *big.Float, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigFloat")
}
func (_this *uint8ArrayBuilder) BuildFromDecimalFloat(_ compact_float.DFloat, _ reflect.Value) {
	_this.panicBadEvent("BuildFromDecimalFloat")
}
func (_this *uint8ArrayBuilder) BuildFromBigDecimalFloat(_ *apd.Decimal, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBigDecimalFloat")
}
func (_this *uint8ArrayBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *uint8ArrayBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *uint8ArrayBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *uint8ArrayBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *uint8ArrayBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *uint8ArrayBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *uint8ArrayBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *uint8ArrayBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *uint8ArrayBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *uint8ArrayBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *uint8ArrayBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// bigDecimalFloat

type bigDecimalFloatBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newBigDecimalFloatBuilder(dstType reflect.Type) ObjectBuilder {
	return &bigDecimalFloatBuilder{
		dstType: dstType,
	}
}
func (_this *bigDecimalFloatBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *bigDecimalFloatBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *bigDecimalFloatBuilder) InitTemplate(_ *Session) {}
func (_this *bigDecimalFloatBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *bigDecimalFloatBuilder) SetParent(_ ObjectBuilder) {}
func (_this *bigDecimalFloatBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *bigDecimalFloatBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setBigDecimalFloatFromInt(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setBigDecimalFloatFromUint(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setBigDecimalFloatFromBigInt(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setBigDecimalFloatFromFloat(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setBigDecimalFloatFromDecimalFloat(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setBigDecimalFloatFromBigFloat(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setBigDecimalFloatFromBigDecimalFloat(value, dst)
}
func (_this *bigDecimalFloatBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *bigDecimalFloatBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *bigDecimalFloatBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *bigDecimalFloatBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *bigDecimalFloatBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *bigDecimalFloatBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *bigDecimalFloatBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *bigDecimalFloatBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *bigDecimalFloatBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *bigDecimalFloatBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *bigDecimalFloatBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *bigDecimalFloatBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// bigFloat

type bigFloatBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newBigFloatBuilder(dstType reflect.Type) ObjectBuilder {
	return &bigFloatBuilder{
		dstType: dstType,
	}
}
func (_this *bigFloatBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *bigFloatBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *bigFloatBuilder) InitTemplate(_ *Session) {}
func (_this *bigFloatBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *bigFloatBuilder) SetParent(_ ObjectBuilder) {}
func (_this *bigFloatBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *bigFloatBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setBigFloatFromInt(value, dst)
}
func (_this *bigFloatBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setBigFloatFromUint(value, dst)
}
func (_this *bigFloatBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setBigFloatFromBigInt(value, dst)
}
func (_this *bigFloatBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setBigFloatFromFloat(value, dst)
}
func (_this *bigFloatBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setBigFloatFromDecimalFloat(value, dst)
}
func (_this *bigFloatBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setBigFloatFromBigFloat(value, dst)
}
func (_this *bigFloatBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setBigFloatFromBigDecimalFloat(value, dst)
}
func (_this *bigFloatBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *bigFloatBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *bigFloatBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *bigFloatBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *bigFloatBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *bigFloatBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *bigFloatBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *bigFloatBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *bigFloatBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *bigFloatBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *bigFloatBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *bigFloatBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// decimalFloat

type decimalFloatBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newDecimalFloatBuilder(dstType reflect.Type) ObjectBuilder {
	return &decimalFloatBuilder{
		dstType: dstType,
	}
}
func (_this *decimalFloatBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *decimalFloatBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *decimalFloatBuilder) InitTemplate(_ *Session) {}
func (_this *decimalFloatBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *decimalFloatBuilder) SetParent(_ ObjectBuilder) {}
func (_this *decimalFloatBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *decimalFloatBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setDecimalFloatFromInt(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setDecimalFloatFromUint(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setDecimalFloatFromBigInt(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setDecimalFloatFromFloat(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setDecimalFloatFromDecimalFloat(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setDecimalFloatFromBigFloat(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setDecimalFloatFromBigDecimalFloat(value, dst)
}
func (_this *decimalFloatBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *decimalFloatBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *decimalFloatBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *decimalFloatBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *decimalFloatBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *decimalFloatBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *decimalFloatBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *decimalFloatBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *decimalFloatBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *decimalFloatBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *decimalFloatBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *decimalFloatBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// float

type floatBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newFloatBuilder(dstType reflect.Type) ObjectBuilder {
	return &floatBuilder{
		dstType: dstType,
	}
}
func (_this *floatBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *floatBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *floatBuilder) InitTemplate(_ *Session) {}
func (_this *floatBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *floatBuilder) SetParent(_ ObjectBuilder) {}
func (_this *floatBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *floatBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setFloatFromInt(value, dst)
}
func (_this *floatBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setFloatFromUint(value, dst)
}
func (_this *floatBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setFloatFromBigInt(value, dst)
}
func (_this *floatBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setFloatFromFloat(value, dst)
}
func (_this *floatBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setFloatFromDecimalFloat(value, dst)
}
func (_this *floatBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setFloatFromBigFloat(value, dst)
}
func (_this *floatBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setFloatFromBigDecimalFloat(value, dst)
}
func (_this *floatBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *floatBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *floatBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *floatBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *floatBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *floatBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *floatBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *floatBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *floatBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *floatBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *floatBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *floatBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// int

type intBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newIntBuilder(dstType reflect.Type) ObjectBuilder {
	return &intBuilder{
		dstType: dstType,
	}
}
func (_this *intBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *intBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *intBuilder) InitTemplate(_ *Session) {}
func (_this *intBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *intBuilder) SetParent(_ ObjectBuilder) {}
func (_this *intBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *intBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setIntFromInt(value, dst)
}
func (_this *intBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setIntFromUint(value, dst)
}
func (_this *intBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setIntFromBigInt(value, dst)
}
func (_this *intBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setIntFromFloat(value, dst)
}
func (_this *intBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setIntFromDecimalFloat(value, dst)
}
func (_this *intBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setIntFromBigFloat(value, dst)
}
func (_this *intBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setIntFromBigDecimalFloat(value, dst)
}
func (_this *intBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *intBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *intBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *intBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *intBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *intBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *intBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *intBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *intBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *intBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *intBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *intBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// pBigDecimalFloat

type pBigDecimalFloatBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newPBigDecimalFloatBuilder(dstType reflect.Type) ObjectBuilder {
	return &pBigDecimalFloatBuilder{
		dstType: dstType,
	}
}
func (_this *pBigDecimalFloatBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *pBigDecimalFloatBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *pBigDecimalFloatBuilder) InitTemplate(_ *Session) {}
func (_this *pBigDecimalFloatBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *pBigDecimalFloatBuilder) SetParent(_ ObjectBuilder) {}
func (_this *pBigDecimalFloatBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *pBigDecimalFloatBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setPBigDecimalFloatFromInt(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setPBigDecimalFloatFromUint(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setPBigDecimalFloatFromBigInt(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setPBigDecimalFloatFromFloat(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setPBigDecimalFloatFromDecimalFloat(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setPBigDecimalFloatFromBigFloat(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setPBigDecimalFloatFromBigDecimalFloat(value, dst)
}
func (_this *pBigDecimalFloatBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *pBigDecimalFloatBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *pBigDecimalFloatBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *pBigDecimalFloatBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *pBigDecimalFloatBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *pBigDecimalFloatBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *pBigDecimalFloatBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *pBigDecimalFloatBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *pBigDecimalFloatBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *pBigDecimalFloatBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *pBigDecimalFloatBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *pBigDecimalFloatBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// pBigFloat

type pBigFloatBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newPBigFloatBuilder(dstType reflect.Type) ObjectBuilder {
	return &pBigFloatBuilder{
		dstType: dstType,
	}
}
func (_this *pBigFloatBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *pBigFloatBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *pBigFloatBuilder) InitTemplate(_ *Session) {}
func (_this *pBigFloatBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *pBigFloatBuilder) SetParent(_ ObjectBuilder) {}
func (_this *pBigFloatBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *pBigFloatBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setPBigFloatFromInt(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setPBigFloatFromUint(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setPBigFloatFromBigInt(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setPBigFloatFromFloat(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setPBigFloatFromDecimalFloat(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setPBigFloatFromBigFloat(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setPBigFloatFromBigDecimalFloat(value, dst)
}
func (_this *pBigFloatBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *pBigFloatBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *pBigFloatBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *pBigFloatBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *pBigFloatBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *pBigFloatBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *pBigFloatBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *pBigFloatBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *pBigFloatBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *pBigFloatBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *pBigFloatBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *pBigFloatBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}

// uint

type uintBuilder struct {
	// Template Data
	dstType reflect.Type
}

func newUintBuilder(dstType reflect.Type) ObjectBuilder {
	return &uintBuilder{
		dstType: dstType,
	}
}
func (_this *uintBuilder) String() string {
	return fmt.Sprintf("%v", reflect.TypeOf(_this))
}
func (_this *uintBuilder) panicBadEvent(name string, args ...interface{}) {
	PanicBadEventWithType(_this, _this.dstType, name, args...)
}
func (_this *uintBuilder) InitTemplate(_ *Session) {}
func (_this *uintBuilder) NewInstance(_ *RootBuilder, _ ObjectBuilder, _ *options.BuilderOptions) ObjectBuilder {
	return _this
}
func (_this *uintBuilder) SetParent(_ ObjectBuilder) {}
func (_this *uintBuilder) BuildFromBool(_ bool, _ reflect.Value) {
	_this.panicBadEvent("BuildFromBool")
}
func (_this *uintBuilder) BuildFromInt(value int64, dst reflect.Value) {
	setUintFromInt(value, dst)
}
func (_this *uintBuilder) BuildFromUint(value uint64, dst reflect.Value) {
	setUintFromUint(value, dst)
}
func (_this *uintBuilder) BuildFromBigInt(value *big.Int, dst reflect.Value) {
	setUintFromBigInt(value, dst)
}
func (_this *uintBuilder) BuildFromFloat(value float64, dst reflect.Value) {
	setUintFromFloat(value, dst)
}
func (_this *uintBuilder) BuildFromDecimalFloat(value compact_float.DFloat, dst reflect.Value) {
	setUintFromDecimalFloat(value, dst)
}
func (_this *uintBuilder) BuildFromBigFloat(value *big.Float, dst reflect.Value) {
	setUintFromBigFloat(value, dst)
}
func (_this *uintBuilder) BuildFromBigDecimalFloat(value *apd.Decimal, dst reflect.Value) {
	setUintFromBigDecimalFloat(value, dst)
}
func (_this *uintBuilder) BuildFromUUID(_ []byte, _ reflect.Value) {
	_this.panicBadEvent("BuildFromUUID")
}
func (_this *uintBuilder) BuildFromArray(arrayType events.ArrayType, value []byte, dst reflect.Value) {
	_this.panicBadEvent("TypedArray(%v)", arrayType)
}
func (_this *uintBuilder) BuildFromTime(_ time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromTime")
}
func (_this *uintBuilder) BuildFromCompactTime(_ *compact_time.Time, _ reflect.Value) {
	_this.panicBadEvent("BuildFromCompactTime")
}
func (_this *uintBuilder) BuildBeginList() {
	_this.panicBadEvent("BuildBeginList")
}
func (_this *uintBuilder) BuildBeginMap() {
	_this.panicBadEvent("BuildBeginMap")
}
func (_this *uintBuilder) BuildEndContainer() {
	_this.panicBadEvent("BuildEndContainer")
}
func (_this *uintBuilder) BuildBeginMarker(_ interface{}) {
	_this.panicBadEvent("BuildBeginMarker")
}
func (_this *uintBuilder) BuildFromReference(_ interface{}) {
	_this.panicBadEvent("BuildFromReference")
}
func (_this *uintBuilder) PrepareForListContents() {
	_this.panicBadEvent("PrepareForListContents")
}
func (_this *uintBuilder) PrepareForMapContents() {
	_this.panicBadEvent("PrepareForMapContents")
}
func (_this *uintBuilder) NotifyChildContainerFinished(_ reflect.Value) {
	_this.panicBadEvent("NotifyChildContainerFinished")
}
